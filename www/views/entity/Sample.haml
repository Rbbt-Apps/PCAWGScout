- require 'rbbt/tsv/excel'
- require 'rbbt/util/colorize'

- sample = donor = entity
- entity_card = EntityCard.new(sample)
- entity_card.name = entity
- study = PCAWG.all_abbreviations.select do |abbr|
  - abbr = Study.setup(abbr.dup)
  - abbr.donors.include? sample
- study = Study.setup(study.first)
- entity_card.meta do

  %h3 Sample tasks

  - task_exports = Sample.synchronous_exports + Sample.asynchronous_exports
  - task_exports = task_exports.collect{|t| t.to_s}
  %ul
    - task_exports.each do |task|
      - base_url = File.join("/", "Sample", task)
      - defaults = Sample.rec_input_defaults(task.to_sym) || {}
      - task_url = base_url +  "?" << Misc.hash2GET_params(defaults.merge(:jobname => entity))
      %li
        %a(href=task_url)= task
        - if defaults.any?
          - task_url = base_url +  "?" << Misc.hash2GET_params(:jobname => entity)
          %a(href=task_url) 
            %i.ui.settings.icon

  %dl
    - histo = PCAWG.donor_histology.tsv
    - fields = histo.fields
    - fields.zip(histo[sample]).each do |key,value|
      %dt=key
      %dd=value * ", "


- entity_card.description do
  - donor_drivers = PCAWG.donor_drivers.tsv(:merge => true, :persist => true)
  - driver_genes = donor_drivers.include?(donor) ? donor_drivers[donor]["Associated Gene Name"].ensembl : []


  - if sample.num_genomic_mutations > 0
    %dl
      %dt Genomic Mutations
      %dd= sample.num_genomic_mutations

      - list_container = ListContainer.new
      - list_container.add "#{donor} mutated principal isoforms", MutatedIsoform.setup(sample.mi(:principal => true), PCAWG.organism)
      - list_container.add "#{donor} affected genes", sample.get_genes(:affected)
      - list_container.add "#{donor} damaged genes", sample.get_genes(:damaged)
      - list_container.add "#{donor} driver genes", driver_genes

      
      = list_container_render(list_container)

    - header "Gene", "Gene", :format =>  "Ensembl Gene ID"
    = table do
      - tsv = TSV.setup({}, :key_field => 'Gene', :fields => ["Mutated Isoform"], :type => :flat, :namespace => PCAWG.organism)
      - MutatedIsoform.setup(sample.mi(:principal => true), PCAWG.organism).each do |mi|
        - gene = mi.protein.gene
        - tsv[gene] ||= []
        - tsv[gene] << mi
      - tsv
    
- entity_card.action_controller = default_action_controller sample

= entity_card_render entity_card
